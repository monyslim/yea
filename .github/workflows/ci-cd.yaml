name: CI

on:
  push:
    branches:
      - master

jobs:
  Build:
    name: Build and Save Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Generate Version Number
        id: version
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          VERSION="v${TIMESTAMP}_${RANDOM}"
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "app_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        id: build
        env:
          image_name: test-image
          username: monyslim
        run: |
          docker build -t $username/$image_name:${{ env.APP_VERSION }} . 2>&1 | tee -a workflow_logs.txt
          docker save -o test-image_${{ env.APP_VERSION }}.tar $username/$image_name:${{ env.APP_VERSION }}

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: test-image_${{ env.APP_VERSION }}.tar

      - name: Upload Logs for Debugging
        uses: actions/upload-artifact@v3
        with:
          name: workflow-logs
          path: workflow_logs.txt

    outputs:
      app_version: ${{ steps.version.outputs.app_version }}

  Deploy:
    name: Deploy Docker Image
    runs-on: self-hosted
    needs: Build

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Load Docker Image
        run: |
          docker load -i test-image_${{ needs.Build.outputs.app_version }}.tar | tee -a workflow_logs.txt

      - name: Run Docker Container
        run: |
          docker run -d -p 8082:3000 monyslim/test-image:${{ needs.Build.outputs.app_version }} | tee -a workflow_logs.txt

  GenerateReport:
    name: Generate Metrics Report
    runs-on: ubuntu-latest
    needs: [Build, Deploy]

    steps:
      - name: Download Logs
        uses: actions/download-artifact@v3
        with:
          name: workflow-logs
          path: .

      - name: Evaluate Metrics and Generate Report
        run: |
            # Initialize Metrics
            build_success=0
            artifact_created=0
            artifact_uploaded=0
            image_loaded=0
            container_running=0
            total_score=0
  
            # Log file and report file
            log_file="workflow_logs.txt"
            report_file="student_workflow_report.txt"
  
            echo "Evaluating Metrics..."
  
            # Check for successful image build
            if grep -q "#10 DONE" "$log_file"; then
                echo "Build success detected." >> "$log_file"
                build_success=20
            fi
  
            # Check for artifact creation
            if grep -q "Container for artifact \"docker-image\" successfully created" "$log_file"; then
                echo "Artifact creation detected." >> "$log_file"
                artifact_created=20
            fi
  
            # Check for artifact upload
            if grep -q "Artifact docker-image has been successfully uploaded!" "$log_file"; then
                echo "Artifact upload detected." >> "$log_file"
                artifact_uploaded=20
            fi
  
            # Check for image loaded
            if grep -q "Loaded image: monyslim/test-image" "$log_file"; then
                echo "Image loading detected." >> "$log_file"
                image_loaded=20
            fi
  
            # Check for container running
            if grep -q "docker run" "$log_file"; then
                echo "Container running detected." >> "$log_file"
                container_running=20
            fi
  
            # Calculate total score
            total_score=$((build_success + artifact_created + artifact_uploaded + image_loaded + container_running))
  
            # Generate Report
            echo "CI/CD Workflow Evaluation Report" > "$report_file"
            echo "================================" >> "$report_file"
            echo "Build Success (%): $build_success" >> "$report_file"
            echo "Artifact Created (%): $artifact_created" >> "$report_file"
            echo "Artifact Uploaded (%): $artifact_uploaded" >> "$report_file"
            echo "Image Loaded (%): $image_loaded" >> "$report_file"
            echo "Container Running (%): $container_running" >> "$report_file"
            echo "" >> "$report_file"
            echo "Total Score (%): $total_score" >> "$report_file"
            echo "Report generated successfully at $report_file."
  